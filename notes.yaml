## put Info here
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: maq_weather
    volumes:
      - $(pwd)/data:/var/lib/postgresql/maq-data
    restart: always
## Network

docker network create maq-network

# DB
docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="maq_weather" \
  -v $(pwd)/data:/var/lib/postgresql/maq-data \
  -p 5432:5432 \
  --network=maq-network \
  --name maq-database \
  postgres:13

# PG ADmin
docker run -it \
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
  --network=maq-network \
  --name pgadmin \
  dpage/pgadmin4

## aiflow services setup
## put Info here
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: maq_weather
    volumes:
      - $(pwd)/data:/var/lib/postgresql/maq-data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

# sql connection
create_engine('postgresql://root:root@localhost:5432/ny_taxi')

docker pull dpage/pgadmin4


# Python ingest script
python ingest_data.py \
--user=root \
--password=root \
--host=localhost \
--port=5432 \
--db=maq_weather \
--table_name=Amsterdam_april \
--data=data/Amsterdam.csv

docker build -t weather_ingest:v001 .

docker run weather_ingest:v001 \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5432 \
  --db=maq_weather \
  --table_name=Amsterdam_april \
  --data=data/Amsterdam.csv \



### Set up ssh access config file in .ssh
Host de-pipeline
    HostName 13.53.162.219
    User ubuntu
    IdentityFile ~/.ssh/aws

# running docker without sudo
https://github.com/sindresorhus/guides/blob/main/docker-without-sudo.md